        -:    0:Source:E:/Code/Skola/Su/CProg/CProg-Project/src/springhawk/Engine.cpp
        -:    0:Graph:E:\Code\Skola\Su\CProg\CProg-Project\cmake-build-debug-coverage\src\CMakeFiles\CProg.dir\springhawk\Engine.cpp.gcno
        -:    0:Data:E:\Code\Skola\Su\CProg\CProg-Project\cmake-build-debug-coverage\src\CMakeFiles\CProg.dir\springhawk\Engine.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "springhawk/Engine.h"
        -:    2:#include "springhawk/Time.h"
        -:    3:#include "springhawk/renderers/Raycaster.h"
        -:    4:#include "springhawk/renderers/ui/UIRenderer.h"
        -:    5:
        -:    6:#include <SDL2/SDL.h>
        -:    7:#include <SDL2/SDL_image.h>
        -:    8:#include <SDL2/SDL_mixer.h>
        -:    9:#include <SDL2/SDL_ttf.h>
        -:   10:
        -:   11:#include <iostream>
        -:   12:#include <string>
        -:   13:#include "Constants.h" //gResPath-contains the path to your resources.
        -:   14:#include "chrono"
        -:   15:#include "thread"
        -:   16:
        -:   17:using namespace springhawk;
        -:   18://Screen dimension constants
        -:   19:const int Engine::SCREEN_WIDTH = 1500;
        -:   20:const int Engine::SCREEN_HEIGHT = 680;
        -:   21:
        -:   22:void (*Engine::render)(SDL_Renderer*, std::vector<GameObject*>, Player*, std::vector<std::vector<int>>, int, int) = nullptr;
        -:   23:
        -:   24:
function _ZN10springhawk6Engine3runESt6vectorIP5SceneSaIS3_EE called 1 returned 100% blocks executed 71%
        1:   25:int Engine::run(std::vector<Scene *> scenes) {
        -:   26:
        1:   27:    if(init()){
        1:   27-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   28:        throw std::runtime_error("Failed to initialize!");
    %%%%%:   28-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   28-block  1
call    4 never executed
    $$$$$:   28-block  2
call    5 never executed
        -:   29:    }
        -:   30:
        1:   31:    SDL_Window* window = SDL_CreateWindow("Window", 100, 100, SCREEN_WIDTH, SCREEN_HEIGHT, 0);
        1:   31-block  0
call    0 returned 1
        1:   32:    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, 0);
call    0 returned 1
        -:   33:
        1:   34:    playScene(scenes[0],renderer);
call    0 returned 1
call    1 returned 1
        1:   35:    quit(window, renderer);
call    0 returned 1
        1:   36:    return EXIT_SUCCESS;
        1:   36-block  0
        -:   37:}
        -:   38:// St√§da innan programmet avslutas!
function _ZN10springhawk6Engine4quitEP10SDL_WindowP12SDL_RendererRSt6vectorIP11SDL_TextureSaIS7_EE called 0 returned 0% blocks executed 0%
    #####:   39:void Engine::quit(SDL_Window *window, SDL_Renderer *renderer,std::vector<SDL_Texture*> &textures) {
    #####:   40:    for(SDL_Texture* texture : textures){
    %%%%%:   40-block  0
call    0 never executed
call    1 never executed
    %%%%%:   40-block  1
call    2 never executed
    %%%%%:   40-block  2
call    3 never executed
    %%%%%:   40-block  3
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:   41:        SDL_DestroyTexture(texture);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:   42:    }
        -:   43:
    #####:   44:    SDL_DestroyRenderer(renderer);
    %%%%%:   44-block  0
call    0 never executed
    #####:   45:    SDL_DestroyWindow(window);
call    0 never executed
        -:   46:
    #####:   47:    TTF_Quit();
call    0 never executed
    #####:   48:    SDL_Quit();
call    0 never executed
    #####:   49:}
        -:   50:
function _ZN10springhawk6Engine4initEv called 1 returned 100% blocks executed 43%
        1:   51:bool Engine::init() {
        1:   52:    if (SDL_Init(SDL_INIT_EVERYTHING) < 0)
        1:   52-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   53:    {
    #####:   54:        std::cout << "Error SDL2 Initialization : " << SDL_GetError();
    %%%%%:   54-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   55:        return EXIT_FAILURE;
        -:   56:    }
        -:   57:
        1:   58:    if (TTF_Init() < 0)
        1:   58-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   59:    {
    #####:   60:        std::cout << "Error SDL_ttf Initialization : " << SDL_GetError();
    %%%%%:   60-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   61:        return EXIT_FAILURE;
        -:   62:    }
        1:   63:    return EXIT_SUCCESS;
        1:   63-block  0
        -:   64:}
        -:   65:
function _ZN10springhawk6Engine12loadTexturesEP12SDL_Renderer called 0 returned 0% blocks executed 0%
    #####:   66:std::vector<SDL_Texture*> Engine::loadTextures(SDL_Renderer* pRenderer) {
    #####:   67:    std::vector<SDL_Texture*> textures;
    %%%%%:   67-block  0
call    0 never executed
        -:   68:
    #####:   69:    SDL_Surface* bg_sur = IMG_Load( (constants::gResPath + "images/bg.jpg").c_str() );
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   69-block  0
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   69-block  1
call    7 never executed
    $$$$$:   69-block  2
call    8 never executed
    $$$$$:   69-block  3
    #####:   70:    SDL_Texture* bg_tex = SDL_CreateTextureFromSurface(pRenderer, bg_sur);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   71:    SDL_FreeSurface(bg_sur);
    %%%%%:   71-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:   72:
    #####:   73:    textures.push_back(bg_tex);
    %%%%%:   73-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   74:    return textures;
    %%%%%:   74-block  0
    %%%%%:   74-block  1
    =====:   75:}
    $$$$$:   75-block  0
call    0 never executed
        -:   76:
        -:   77:
function _ZN10springhawk6Engine9playSceneEP5SceneP12SDL_Renderer called 1 returned 100% blocks executed 38%
        1:   78:void Engine::playScene(Scene *scene, SDL_Renderer *sdlRenderer) {
        1:   79:    std::vector<GameObject*> gameObjects = scene->getGameObjects();
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   80:    Player* player = scene->getPlayer();
        1:   80-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81:    std::vector<std::vector<int>> map = scene->getTileMap();
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82:    if(isOutOfBounds(player->getPosition(), map)){
        1:   82-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   82-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   82-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:   82-block  4
    $$$$$:   82-block  5
call   12 never executed
    $$$$$:   82-block  6
    #####:   83:        player->setPosition(getValidPos(map));
    %%%%%:   83-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   83-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   83-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   83-block  3
call    9 never executed
    $$$$$:   83-block  4
call   10 never executed
    $$$$$:   83-block  5
    $$$$$:   83-block  6
        -:   84:    }
        -:   85:
        1:   86:    springhawk::RenderTag renderTag = scene->getRenderTag();
        1:   86-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   87:    switch (renderTag) {
        1:   87-block  0
branch  0 taken 0
branch  1 taken 1
branch  2 taken 0
branch  3 taken 0
    #####:   88:        case springhawk::RenderTag::Plane:
    #####:   89:            std::cout << "No plane renderer available yet" << std::endl;
    %%%%%:   89-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   89-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:   90:            break;
    %%%%%:   90-block  0
        1:   91:        case springhawk::RenderTag::Raycaster:
        1:   92:            springhawk::Engine::render = &Raycaster::render;
        1:   93:            break;
        1:   93-block  0
    #####:   94:        case Doom:
    #####:   95:            std::cout << "No doom style renderer available yet" << std::endl;
    %%%%%:   95-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   95-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:   96:            break;
    %%%%%:   96-block  0
    #####:   97:        default:
    #####:   98:            std::cout << "No render tag found" << std::endl;
    %%%%%:   98-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   98-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:   99:            std::exit(-1);
    %%%%%:   99-block  0
call    0 never executed
        -:  100:            break;
        -:  101:    }
        -:  102:
        -:  103:
        1:  104:    keepOpen(sdlRenderer, gameObjects, player, map);
        1:  104-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  104-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  104-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  104-block  3
call    9 returned 1
call   10 returned 1
    $$$$$:  104-block  4
call   11 never executed
    $$$$$:  104-block  5
    $$$$$:  104-block  6
call   12 never executed
    $$$$$:  104-block  7
        1:  105:}
call    0 returned 1
call    1 returned 1
    $$$$$:  105-block  0
call    2 never executed
    $$$$$:  105-block  1
call    3 never executed
        -:  106:
function _ZN10springhawk6Engine8keepOpenEP12SDL_RendererSt6vectorIP10GameObjectSaIS5_EEP6PlayerS3_IS3_IiSaIiEESaISB_EE called 1 returned 100% blocks executed 51%
        1:  107:void Engine::keepOpen(SDL_Renderer *pRenderer, std::vector<GameObject *> gameObjects, Player *pPlayer,
        -:  108:                                  std::vector<std::vector<int>> map) {
        1:  109:    Uint64 startTime = SDL_GetTicks();
        1:  109-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  110:
        1:  111:    Vector2 lastValidPlayerPosition = pPlayer->getPosition(); //Assuming the player spawns i valid space
        1:  111-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  112:    while (true) {
        -:  113:
        -:  114:        SDL_Event e;
     1842:  115:        if (SDL_PollEvent(&e)) {
     1842:  115-block  0
call    0 returned 1842
branch  1 taken 1842 (fallthrough)
branch  2 taken 0 (throw)
     1842:  115-block  1
branch  3 taken 381 (fallthrough)
branch  4 taken 1461
      381:  116:            if (e.type == SDL_QUIT) {
      381:  116-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 380
        1:  117:                return;
        1:  117-block  0
        1:  117-block  1
        -:  118:            }
        -:  119:
      380:  120:            handleEvent(&e);
      380:  120-block  0
call    0 returned 380
        -:  121:        }
        -:  122:
    1841*:  123:        for(const auto& gameObject : gameObjects){
     1841:  123-block  0
call    0 returned 1841
call    1 returned 1841
    %%%%%:  123-block  1
call    2 never executed
    %%%%%:  123-block  2
call    3 never executed
     1841:  123-block  3
call    4 returned 1841
branch  5 taken 0
branch  6 taken 1841 (fallthrough)
    #####:  124:            gameObject->update();
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  125:            if(isOutOfBounds(gameObject->getPosition(), map)){
    %%%%%:  125-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  125-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  125-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  125-block  3
call    9 never executed
    $$$$$:  125-block  4
    $$$$$:  125-block  5
call   10 never executed
    $$$$$:  125-block  6
        -:  126:
        -:  127:            }
        -:  128:        }
     1841:  129:        pPlayer->update();
     1841:  129-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  130:        if(isOutOfBounds(pPlayer->getPosition(), map)){
     1841:  130-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  130-block  1
call    3 returned 1841
branch  4 taken 1841 (fallthrough)
branch  5 taken 0 (throw)
     1841:  130-block  2
call    6 returned 1841
branch  7 taken 1841 (fallthrough)
branch  8 taken 0 (throw)
     1841:  130-block  3
call    9 returned 1841
branch 10 taken 0 (fallthrough)
branch 11 taken 1841
    $$$$$:  130-block  4
    $$$$$:  130-block  5
call   12 never executed
    $$$$$:  130-block  6
    #####:  131:            pPlayer->setPosition(lastValidPlayerPosition);
    %%%%%:  131-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  131-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  131-block  2
    $$$$$:  131-block  3
        -:  132:        }
     1841:  133:        lastValidPlayerPosition = pPlayer->getPosition();
     1841:  133-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  133-block  1
call    3 returned 1841
branch  4 taken 1841 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:  133-block  2
        -:  134:
     1841:  135:        draw(pRenderer, gameObjects, pPlayer, map);
     1841:  135-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  135-block  1
call    3 returned 1841
branch  4 taken 1841 (fallthrough)
branch  5 taken 0 (throw)
     1841:  135-block  2
call    6 returned 1841
branch  7 taken 1841 (fallthrough)
branch  8 taken 0 (throw)
     1841:  135-block  3
call    9 returned 1841
call   10 returned 1841
    $$$$$:  135-block  4
call   11 never executed
    $$$$$:  135-block  5
    $$$$$:  135-block  6
call   12 never executed
    $$$$$:  135-block  7
        -:  136:
     1841:  137:        float deltaTime = (SDL_GetTicks64() - startTime) / 1000.0f;
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
        -:  138:
        -:  139:        //Needs to be looked at, dont know if this is the best way to do it. Should probably not use inheritance.
        -:  140:        //Works for now.
     1841:  141:        Time::setDeltaTime(deltaTime);
     1841:  141-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
        -:  142:
     1841:  143:        startTime = SDL_GetTicks();
     1841:  143-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  144:    }
     1841:  144-block  0
        -:  145:
        -:  146:}
        -:  147:
function _ZN10springhawk6Engine11handleEventEP9SDL_Event called 380 returned 100% blocks executed 100%
      380:  148:void Engine::handleEvent(SDL_Event *event){
      380:  149:    switch (event->type) {
      380:  149-block  0
branch  0 taken 81 (fallthrough)
branch  1 taken 299
       81:  150:        case SDL_KEYDOWN:
        -:  151:        case SDL_KEYUP:
       81:  152:            break;
       81:  152-block  0
        -:  153:    }
      380:  154:}
        -:  155:
function _ZN10springhawk6Engine5sleepEi called 0 returned 0% blocks executed 0%
    #####:  156:void Engine::sleep(int duration_ms){
    #####:  157:    std::this_thread::sleep_for(std::chrono::milliseconds(duration_ms));
    %%%%%:  157-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:  158:}
    %%%%%:  158-block  0
        -:  159:
function _ZN10springhawk6Engine4quitEP10SDL_WindowP12SDL_Renderer called 1 returned 100% blocks executed 100%
        1:  160:void Engine::quit(SDL_Window *window, SDL_Renderer *renderer) {
        1:  161:    SDL_DestroyRenderer(renderer);
        1:  161-block  0
call    0 returned 1
        1:  162:    SDL_DestroyWindow(window);
call    0 returned 1
        -:  163:
        1:  164:    TTF_Quit();
call    0 returned 1
        1:  165:    SDL_Quit();
call    0 returned 1
        1:  166:}
        -:  167:
function _ZN10springhawk6Engine4drawEP12SDL_RendererSt6vectorIP10GameObjectSaIS5_EEP6PlayerS3_IS3_IiSaIiEESaISB_EE called 1841 returned 100% blocks executed 55%
     1841:  168:void Engine::draw(SDL_Renderer *pRenderer, std::vector<GameObject *> gameObjects, Player *pPlayer,
        -:  169:                              std::vector<std::vector<int>> map) {
     1841:  170:    Color backgroundColor = {120,104,103,255};
     1841:  171:    SDL_SetRenderDrawColor( pRenderer, backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a );
     1841:  171-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  172:    SDL_RenderClear( pRenderer );
     1841:  172-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  173:    Engine::render(pRenderer, gameObjects, pPlayer, map, SCREEN_WIDTH, SCREEN_HEIGHT);
     1841:  173-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  173-block  1
call    3 returned 1841
branch  4 taken 1841 (fallthrough)
branch  5 taken 0 (throw)
     1841:  173-block  2
call    6 returned 1841
branch  7 taken 1841 (fallthrough)
branch  8 taken 0 (throw)
     1841:  173-block  3
call    9 returned 1841
call   10 returned 1841
    $$$$$:  173-block  4
call   11 never executed
    $$$$$:  173-block  5
    $$$$$:  173-block  6
call   12 never executed
    $$$$$:  173-block  7
        -:  174:
     1841:  175:    std::string text = "FPS: " + std::to_string((int)(1/Time::getDeltaTime()));
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  175-block  0
call    3 returned 1841
call    4 returned 1841
branch  5 taken 1841 (fallthrough)
branch  6 taken 0 (throw)
     1841:  175-block  1
call    7 returned 1841
    $$$$$:  175-block  2
call    8 never executed
    $$$$$:  175-block  3
        -:  176://    UIRenderer::drawText(text, {0,0}, "ComicSans/comic.ttf", 20, {255,255,0,255}, pRenderer);
     3682:  177:    UIRenderer::drawText(text, {0,0}, "ComicSans/comic.ttf", 20, {255,255,0,255}, pRenderer);
     1841:  177-block  0
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
     1841:  177-block  1
call    3 returned 1841
branch  4 taken 1841 (fallthrough)
branch  5 taken 0 (throw)
     1841:  177-block  2
call    6 returned 1841
branch  7 taken 1841 (fallthrough)
branch  8 taken 0 (throw)
     1841:  177-block  3
call    9 returned 1841
    $$$$$:  177-block  4
    $$$$$:  177-block  5
call   10 never executed
    $$$$$:  177-block  6
    $$$$$:  177-block  7
     1841:  178:    SDL_RenderPresent(pRenderer);
call    0 returned 1841
branch  1 taken 1841 (fallthrough)
branch  2 taken 0 (throw)
        -:  179:
     1841:  180:}
     1841:  180-block  0
call    0 returned 1841
    $$$$$:  180-block  1
call    1 never executed
        -:  181:
function _ZN10springhawk6Engine13isOutOfBoundsE7Vector2St6vectorIS2_IiSaIiEESaIS4_EE called 1842 returned 100% blocks executed 84%
     1842:  182:bool Engine::isOutOfBounds(Vector2 objectPosition, std::vector<std::vector<int>> map) {
        -:  183:
    1842*:  184:    if(objectPosition.getX() < 0 || objectPosition.getX() > SCREEN_WIDTH){
     1842:  184-block  0
call    0 returned 1842
branch  1 taken 1842 (fallthrough)
branch  2 taken 0
     1842:  184-block  1
call    3 returned 1842
branch  4 taken 0 (fallthrough)
branch  5 taken 1842
    %%%%%:  184-block  2
     1842:  184-block  3
     1842:  184-block  4
branch  6 taken 0 (fallthrough)
branch  7 taken 1842
    #####:  185:        return true;
    %%%%%:  185-block  0
        -:  186:    }
    1842*:  187:    if(objectPosition.getY() > 0 || objectPosition.getY() < -SCREEN_HEIGHT){
     1842:  187-block  0
call    0 returned 1842
branch  1 taken 1842 (fallthrough)
branch  2 taken 0
     1842:  187-block  1
call    3 returned 1842
branch  4 taken 0 (fallthrough)
branch  5 taken 1842
    %%%%%:  187-block  2
     1842:  187-block  3
     1842:  187-block  4
branch  6 taken 0 (fallthrough)
branch  7 taken 1842
    #####:  188:        return true;
    %%%%%:  188-block  0
        -:  189:    }
        -:  190:
     1842:  191:    int mapWidth = map.size();
     1842:  191-block  0
call    0 returned 1842
     1842:  192:    int mapHeight = map[0].size();
call    0 returned 1842
call    1 returned 1842
     1842:  193:    int currentXCell = static_cast<int>(objectPosition.getX() * mapWidth / SCREEN_WIDTH);
call    0 returned 1842
     1842:  194:    int currentYCell = static_cast<int>(objectPosition.getY() * mapHeight / SCREEN_HEIGHT);
call    0 returned 1842
     1842:  195:    return map[-currentYCell][currentXCell] != 0;
call    0 returned 1842
call    1 returned 1842
        -:  196:}
        -:  197:
function _ZN10springhawk6Engine11getValidPosESt6vectorIS1_IiSaIiEESaIS3_EE called 0 returned 0% blocks executed 0%
    #####:  198:Vector2 Engine::getValidPos(std::vector<std::vector<int>> map) {
        -:  199:    //Todo: Change scalar to be based on tileMap size not screenSize. ScreenSize works in 2D game not in 3D
    #####:  200:    int mapWidth = SCREEN_WIDTH;
    #####:  201:    int mapHeight = SCREEN_HEIGHT;
        -:  202:
    #####:  203:    for(int x = 0; x < mapWidth; x++){
    %%%%%:  203-block  0
    %%%%%:  203-block  1
    %%%%%:  203-block  2
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  204:        for(int y = 0; y < mapHeight; y++){
    %%%%%:  204-block  0
    %%%%%:  204-block  1
    %%%%%:  204-block  2
branch  0 never executed
branch  1 never executed (fallthrough)
    #####:  205:            Vector2 pos = Vector2(x,-y);
    %%%%%:  205-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  206:            if(!isOutOfBounds(pos, map)){
    %%%%%:  206-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  206-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  206-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  206-block  3
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed
    $$$$$:  206-block  4
    $$$$$:  206-block  5
call   12 never executed
    $$$$$:  206-block  6
    #####:  207:                return pos;
    %%%%%:  207-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  207-block  1
        -:  208:            }
        -:  209:        }
        -:  210:    }
        -:  211:
    #####:  212:    return Vector2();
    %%%%%:  212-block  0
call    0 never executed
        -:  213:}
        -:  214:
        -:  215:
