        -:    0:Source:E:/Code/Skola/Su/CProg/CProg-Project/src/springhawk/Vector2.cpp
        -:    0:Graph:E:\Code\Skola\Su\CProg\CProg-Project\cmake-build-debug-coverage\src\CMakeFiles\CProg.dir\springhawk\Vector2.cpp.gcno
        -:    0:Data:E:\Code\Skola\Su\CProg\CProg-Project\cmake-build-debug-coverage\src\CMakeFiles\CProg.dir\springhawk\Vector2.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by felix on 2023-11-12.
        -:    3://
        -:    4:#include <cmath>
        -:    5:#include "springhawk/Vector2.h"
        -:    6:
        -:    7://Unit vector is up and right, that is (0,1) and (1,0). This is to make it easier for the user to work with the engine.
        -:    8://The origin is in the lower left corner of the screen.
        -:    9:Vector2 const Vector2::zero = Vector2(0,0);
        -:   10:Vector2 const Vector2::one = Vector2(1,1);
        -:   11:Vector2 const Vector2::up = Vector2(0,1);
        -:   12:Vector2 const Vector2::down = Vector2(0,-1);
        -:   13:Vector2 const Vector2::left = Vector2(-1,0);
        -:   14:Vector2 const Vector2::right = Vector2(1,0);
        -:   15:
        -:   16:
function _ZN7Vector2C2Eii called 1848 returned 100% blocks executed 100%
     1848:   17:Vector2::Vector2(int x, int y) {
     1848:   18:    this->x = x;
     1848:   19:    this->y = y;
     1848:   20:}
        -:   21:
function _ZN7Vector2C2Edd called 105786490 returned 100% blocks executed 100%
105786490:   22:Vector2::Vector2(double x, double y) {
105786490:   23:    this->x = x;
105786490:   24:    this->y = y;
105786490:   25:}
        -:   26:
function _ZN7Vector2C2Ev called 1 returned 100% blocks executed 100%
        1:   27:Vector2::Vector2() {
        1:   28:    x = 0;
        1:   29:    y = 0;
        1:   30:}
        -:   31:
function _ZNK7Vector24getXEv called 210206439 returned 100% blocks executed 100%
210206439:   32:double Vector2::getX() const {
210206439:   33:    return x;
210206439:   33-block  0
        -:   34:}
        -:   35:
function _ZNK7Vector24getYEv called 210206439 returned 100% blocks executed 100%
210206439:   36:double Vector2::getY() const {
210206439:   37:    return y;
210206439:   37-block  0
        -:   38:}
        -:   39:
function _ZNK7Vector2plERKS_ called 0 returned 0% blocks executed 0%
    #####:   40:Vector2 Vector2::operator+(const Vector2 &rhs) const {
    #####:   41:    return {x+rhs.x,y+rhs.y};
    %%%%%:   41-block  0
call    0 never executed
        -:   42:}
        -:   43:
function _ZNK7Vector2miERKS_ called 460250 returned 100% blocks executed 100%
   460250:   44:Vector2 Vector2::operator-(const Vector2 &rhs) const {
   460250:   45:    return {x-rhs.x,y-rhs.y};
   460250:   45-block  0
call    0 returned 460250
        -:   46:}
        -:   47:
function _ZNK7Vector2mlERKd called 104405740 returned 100% blocks executed 100%
104405740:   48:Vector2 Vector2::operator*(const double &rhs) const {
104405740:   49:    return {x*rhs,y*rhs};
104405740:   49-block  0
call    0 returned 104405740
        -:   50:}
        -:   51:
function _ZN7Vector2pLERKS_ called 104405740 returned 100% blocks executed 100%
104405740:   52:Vector2 Vector2::operator+=(const Vector2& rhs){
104405740:   53:    x += rhs.getX();
104405740:   53-block  0
call    0 returned 104405740
104405740:   54:    y += rhs.getY();
call    0 returned 104405740
104405740:   55:    return *this;
call    0 returned 104405740
        -:   56:}
function _ZN7Vector2mIERKS_ called 0 returned 0% blocks executed 0%
    #####:   57:Vector2 Vector2::operator-=(const Vector2& rhs){
    #####:   58:    x -= rhs.getX();
    %%%%%:   58-block  0
call    0 never executed
    #####:   59:    y -= rhs.getY();
call    0 never executed
    #####:   60:    return *this;
call    0 never executed
        -:   61:}
        -:   62:
function _ZN7Vector2aSERKS_ called 1842 returned 100% blocks executed 100%
     1842:   63:Vector2& Vector2::operator=(const Vector2& rhs){
     1842:   64:    x = rhs.getX();
     1842:   64-block  0
call    0 returned 1842
     1842:   65:    y = rhs.getY();
call    0 returned 1842
     1842:   66:    return *this;
        -:   67:}
        -:   68:
function _ZN7Vector2mLERKd called 0 returned 0% blocks executed 0%
    #####:   69:Vector2 Vector2::operator*=(const double &rhs) {
    #####:   70:    x *= rhs;
    #####:   71:    y *= rhs;
    #####:   72:    return *this;
    %%%%%:   72-block  0
call    0 never executed
        -:   73:}
        -:   74:
function _ZlsRSoRK7Vector2 called 0 returned 0% blocks executed 0%
    #####:   75:std::ostream &operator<<(std::ostream &os, const Vector2 &dt) {
    #####:   76:    os << "{x: " << dt.x << ", y: " << dt.y << "}";
    %%%%%:   76-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:   77:    return os;
        -:   78:}
        -:   79:
function _ZNK7Vector29magnitudeEv called 460250 returned 100% blocks executed 100%
   460250:   80:double Vector2::magnitude() const {
   460250:   81:    return std::sqrt((x*x) + (y*y));
   460250:   81-block  0
        -:   82:}
        -:   83:
function _ZN7Vector23dotERKS_S1_ called 0 returned 0% blocks executed 0%
    #####:   84:double Vector2::dot(const Vector2 &v1, const Vector2 &v2) {
    #####:   85:    return v1.x*v2.x + v1.y*v2.y;
    %%%%%:   85-block  0
        -:   86:}
        -:   87:
function _ZN7Vector28distanceERKS_S1_ called 0 returned 0% blocks executed 0%
    #####:   88:double Vector2::distance(const Vector2 &v1, const Vector2 &v2) {
    #####:   89:    return (v1 - v2).magnitude();
    %%%%%:   89-block  0
call    0 never executed
call    1 never executed
        -:   90:}
        -:   91:
function _ZN7Vector25angleERKS_S1_ called 0 returned 0% blocks executed 0%
    #####:   92:double Vector2::angle(const Vector2 &v1, const Vector2 &v2) {
    #####:   93:    double magProduct = v1.magnitude() * v2.magnitude();
    %%%%%:   93-block  0
call    0 never executed
call    1 never executed
    #####:   94:    if(magProduct != 0){
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   95:        double dotProduct = Vector2::dot(v1,v2);
    %%%%%:   95-block  0
call    0 never executed
    #####:   96:        return std::acos(dotProduct/magProduct);
        -:   97:    }
    #####:   98:    return 0;
    %%%%%:   98-block  0
        -:   99:}
        -:  100:
function _ZN7Vector210normalizedERKS_ called 0 returned 0% blocks executed 0%
    #####:  101:Vector2 Vector2::normalized(const Vector2 &vector) {
    #####:  102:    return vector * (1 / vector.magnitude());
    %%%%%:  102-block  0
call    0 never executed
call    1 never executed
        -:  103:}
        -:  104:
function _ZN7Vector27rotatedERKS_d called 0 returned 0% blocks executed 0%
    #####:  105:Vector2 Vector2::rotated(const Vector2 &vector, double angle) {
    #####:  106:    double newX = vector.x * std::cos(angle) - vector.y * std::sin(angle);
    #####:  107:    double newY = vector.x * std::sin(angle) + vector.y * std::cos(angle);
    #####:  108:    return {newX, newY};
    %%%%%:  108-block  0
call    0 never executed
        -:  109:}
        -:  110:
function _ZNK7Vector2eqERKS_ called 0 returned 0% blocks executed 0%
    #####:  111:bool Vector2::operator==(const Vector2 &rhs) const {
    #####:  112:    return x == rhs.x && y == rhs.y;
    %%%%%:  112-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  112-block  1
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  112-block  2
    %%%%%:  112-block  3
    %%%%%:  112-block  4
        -:  113:}
        -:  114:
function _ZN7Vector2C2ERKS_ called 210658005 returned 100% blocks executed 100%
210658005:  115:Vector2::Vector2(const Vector2 &rhs) {
210658005:  116:    x = rhs.x;
210658005:  117:    y = rhs.y;
210658005:  118:}
        -:  119:
function _ZNK7Vector23dotERKS_ called 0 returned 0% blocks executed 0%
    #####:  120:double Vector2::dot(const Vector2 &rhs) const {
    #####:  121:    return (this->x*rhs.x) + (this->y*rhs.y);
    %%%%%:  121-block  0
        -:  122:}
        -:  123:
function _ZNK7Vector212angleBetweenERKS_ called 0 returned 0% blocks executed 0%
    #####:  124:double Vector2::angleBetween(const Vector2 &rhs) const {
    #####:  125:    double dot = this->dot(rhs);
    %%%%%:  125-block  0
call    0 never executed
    #####:  126:    double mag = this->magnitude() * rhs.magnitude();
call    0 never executed
call    1 never executed
    #####:  127:    return std::acos(dot/mag);
        -:  128:}
        -:  129:
function _ZN7Vector29normalizeEv called 0 returned 0% blocks executed 0%
    #####:  130:Vector2 Vector2::normalize() {
    #####:  131:    *this *= 1/this->magnitude();
    %%%%%:  131-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:  131-block  1
    #####:  132:    return *this;
    %%%%%:  132-block  0
call    0 never executed
        -:  133:}
        -:  134:
function _ZN7Vector26rotateEd called 0 returned 0% blocks executed 0%
    #####:  135:Vector2 Vector2::rotate(double angle){
    #####:  136:    double newX = x * std::cos(angle) - y * std::sin(angle);
    #####:  137:    double newY = x * std::sin(angle) + y * std::cos(angle);
    #####:  138:    *this = Vector2(newX, newY);
    %%%%%:  138-block  0
call    0 never executed
call    1 never executed
    #####:  139:    return *this;
call    0 never executed
        -:  140:}
        -:  141:
function _ZNK7Vector28distanceERKS_ called 0 returned 0% blocks executed 0%
    #####:  142:double Vector2::distance(const Vector2 &rhs) const {
    #####:  143:    return (*this - rhs).magnitude();
    %%%%%:  143-block  0
call    0 never executed
call    1 never executed
        -:  144:}
